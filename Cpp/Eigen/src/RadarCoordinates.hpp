#ifndef FILTERING_RADAR_COORDINATES_HPP
#define FILTERING_RADAR_COORDINATES_HPP
/*
DO NOT EDIT THIS FILE!  EDIT RadarCoordinatesTemplate.java
*/

#include "AbstractRadarCoordinates.hpp"

/**
 * @author NOOK
 *
 * The code for these methods is machine translated from Mathematica CForm[]
 * output.  There are too many parenthesis, but better to have them and not
 * to need them than to not have them and to need them.
 */


class RadarCoordinates : public AbstractRadarCoordinates {
public:
	RadarCoordinates() {};

protected:
	inline double d1AzimuthdENU1(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};
	inline double d2AzimuthdENU2(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d3AzimuthdENU3(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d4AzimuthdENU4(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d5AzimuthdENU5(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;

	inline double d1ElevationdENU1(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d2ElevationdENU2(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d3ElevationdENU3(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d4ElevationdENU4(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d5ElevationdENU5(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;

	inline double d1RangedENU1(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d2RangedENU2(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d3RangedENU3(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d4RangedENU4(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d5RangedENU5(const RealVector E, const RealVector N, const RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;

	inline double d1EastdAER1(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d2EastdAER2(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d3EastdAER3(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d4EastdAER4(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d5EastdAER5(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;

	inline double d1NorthdAER1(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d2NorthdAER2(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d3NorthdAER3(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d4NorthdAER4(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d5NorthdAER5(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;

	inline double d1UpdAER1(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d2UpdAER2(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d3UpdAER3(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d4UpdAER4(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;
	inline double d5UpdAER5(const RealVector A, const RealVector E, const RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N(0))*(E(1)))-((E(0))*(N(1)))))/(((POW(E(0),2))+(POW(N(0),2))));
		return result;
	};;


};
#endif