/*
DO NOT EDIT THIS FILE!  EDIT RadarCoordinatesTemplate.java
 */
/**
 * 
 */
package com.bluelightning.tools;

import org.apache.commons.math3.linear.RealVector;

/**
 * @author NOOK
 *
 * The code for these methods is machine translated from Mathematica CForm[] 
 * output.  There are too many parenthesis, but better to have them and not
 * to need them than to not have them and to need them.
 */
public class RadarCoordinates extends AbstractRadarCoordinates {

	@Override
	protected double d1AzimuthdENU1(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((N.getEntry(0))*(E.getEntry(1)))-((E.getEntry(0))*(N.getEntry(1)))))/(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))));
		return result;
	}

	@Override
	protected double d2AzimuthdENU2(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((-2)*((((N.getEntry(0))*(E.getEntry(1)))-((E.getEntry(0))*(N.getEntry(1))))))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((N.getEntry(0))*(E.getEntry(2)))-((E.getEntry(0))*(N.getEntry(2))))))))/(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2));
		return result;
	}

	@Override
	protected double d3AzimuthdENU3(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((((((((((6)*(POW(E.getEntry(0),2)))*(N.getEntry(0)))-((2)*(POW(N.getEntry(0),3)))))*(POW(E.getEntry(1),3)))-(((((6)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))-((3)*(POW(N.getEntry(0),2))))))*(POW(E.getEntry(1),2)))*(N.getEntry(1))))+(((2)*(((POW(E.getEntry(0),3))-(((3)*(E.getEntry(0)))*(POW(N.getEntry(0),2))))))*(POW(N.getEntry(1),3))))+(((3)*(N.getEntry(1)))*((((((POW(E.getEntry(0),4))-(POW(N.getEntry(0),4))))*(E.getEntry(2)))+(((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(N.getEntry(2)))))))+(((3)*(E.getEntry(1)))*(((((((2)*(N.getEntry(0)))*((((-3)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),2)))-(((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(E.getEntry(2))))+((((POW(E.getEntry(0),4))-(POW(N.getEntry(0),4))))*(N.getEntry(2)))))))-((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((-(((N.getEntry(0))*(E.getEntry(3)))))+((E.getEntry(0))*(N.getEntry(3))))))))/(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3));
		return result;
	}

	@Override
	protected double d4AzimuthdENU4(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((((((((((24)*(E.getEntry(0)))*(N.getEntry(0)))*(((-(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(E.getEntry(1),4)))+((((24)*((((POW(E.getEntry(0),4))-(((6)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4)))))*(POW(E.getEntry(1),3)))*(N.getEntry(1))))+(((((24)*(E.getEntry(0)))*(N.getEntry(0)))*(((-(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),4))))+((((12)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),2)))*((((((((-3)*(POW(E.getEntry(0),2)))*(N.getEntry(0)))+(POW(N.getEntry(0),3))))*(E.getEntry(2)))+(((E.getEntry(0))*(((POW(E.getEntry(0),2))-((3)*(POW(N.getEntry(0),2))))))*(N.getEntry(2)))))))-(((12)*(POW(E.getEntry(1),2)))*(((((((12)*(E.getEntry(0)))*(N.getEntry(0)))*(((-(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),2)))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((((((-3)*(POW(E.getEntry(0),2)))*(N.getEntry(0)))+(POW(N.getEntry(0),3))))*(E.getEntry(2)))+(((E.getEntry(0))*(((POW(E.getEntry(0),2))-((3)*(POW(N.getEntry(0),2))))))*(N.getEntry(2))))))))))+((((4)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(N.getEntry(1)))*(((((((E.getEntry(0))-(N.getEntry(0))))*(((E.getEntry(0))+(N.getEntry(0)))))*(E.getEntry(3)))+((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(N.getEntry(3)))))))+(((4)*(E.getEntry(1)))*((((((-6)*((((POW(E.getEntry(0),4))-(((6)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4)))))*(POW(N.getEntry(1),3)))-((((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(N.getEntry(1)))*((((((POW(E.getEntry(0),3))-(((3)*(E.getEntry(0)))*(POW(N.getEntry(0),2)))))*(E.getEntry(2)))-(((N.getEntry(0))*((((-3)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(N.getEntry(2)))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*((((((-2)*(E.getEntry(0)))*(N.getEntry(0)))*(E.getEntry(3)))+(((((E.getEntry(0))-(N.getEntry(0))))*(((E.getEntry(0))+(N.getEntry(0)))))*(N.getEntry(3))))))))))-((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*((((((((6)*(E.getEntry(0)))*(N.getEntry(0)))*(POW(E.getEntry(2),2)))+((((6)*(((-(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(E.getEntry(2)))*(N.getEntry(2))))-((((6)*(E.getEntry(0)))*(N.getEntry(0)))*(POW(N.getEntry(2),2))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((-(((N.getEntry(0))*(E.getEntry(4)))))+((E.getEntry(0))*(N.getEntry(4)))))))))))/(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4));
		return result;
	}

	@Override
	protected double d5AzimuthdENU5(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((((((((((24)*((((((5)*(POW(E.getEntry(0),4)))*(N.getEntry(0)))-(((10)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),3))))+(POW(N.getEntry(0),5)))))*(POW(E.getEntry(1),5)))-(((((120)*(E.getEntry(0)))*((((POW(E.getEntry(0),4))-(((10)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((5)*(POW(N.getEntry(0),4))))))*(POW(E.getEntry(1),4)))*(N.getEntry(1))))-(((24)*((((POW(E.getEntry(0),5))-(((10)*(POW(E.getEntry(0),3)))*(POW(N.getEntry(0),2))))+(((5)*(E.getEntry(0)))*(POW(N.getEntry(0),4))))))*(POW(N.getEntry(1),5))))-((((60)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),3)))*(((((((POW(E.getEntry(0),4))-(((6)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4))))*(E.getEntry(2)))+((((((4)*(E.getEntry(0)))*(((E.getEntry(0))-(N.getEntry(0)))))*(N.getEntry(0)))*(((E.getEntry(0))+(N.getEntry(0)))))*(N.getEntry(2)))))))+(((60)*(POW(E.getEntry(1),3)))*((((((-4)*((((((5)*(POW(E.getEntry(0),4)))*(N.getEntry(0)))-(((10)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),3))))+(POW(N.getEntry(0),5)))))*(POW(N.getEntry(1),2)))+(((((4)*(E.getEntry(0)))*(N.getEntry(0)))*(((-(POW(E.getEntry(0),4)))+(POW(N.getEntry(0),4)))))*(E.getEntry(2))))+((((((POW(E.getEntry(0),6))-(((5)*(POW(E.getEntry(0),4)))*(POW(N.getEntry(0),2))))-(((5)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),4))))+(POW(N.getEntry(0),6))))*(N.getEntry(2)))))))+((((20)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(N.getEntry(1),2)))*((((((((-3)*(POW(E.getEntry(0),2)))*(N.getEntry(0)))+(POW(N.getEntry(0),3))))*(E.getEntry(3)))+(((E.getEntry(0))*(((POW(E.getEntry(0),2))-((3)*(POW(N.getEntry(0),2))))))*(N.getEntry(3)))))))-(((20)*(POW(E.getEntry(1),2)))*((((((-12)*((((POW(E.getEntry(0),5))-(((10)*(POW(E.getEntry(0),3)))*(POW(N.getEntry(0),2))))+(((5)*(E.getEntry(0)))*(POW(N.getEntry(0),4))))))*(POW(N.getEntry(1),3)))-((((9)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(N.getEntry(1)))*(((((((POW(E.getEntry(0),4))-(((6)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4))))*(E.getEntry(2)))+((((((4)*(E.getEntry(0)))*(((E.getEntry(0))-(N.getEntry(0)))))*(N.getEntry(0)))*(((E.getEntry(0))+(N.getEntry(0)))))*(N.getEntry(2)))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*((((((((-3)*(POW(E.getEntry(0),2)))*(N.getEntry(0)))+(POW(N.getEntry(0),3))))*(E.getEntry(3)))+(((E.getEntry(0))*(((POW(E.getEntry(0),2))-((3)*(POW(N.getEntry(0),2))))))*(N.getEntry(3))))))))))+((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(N.getEntry(1)))*((((((((-6)*(((POW(E.getEntry(0),3))-(((3)*(E.getEntry(0)))*(POW(N.getEntry(0),2))))))*(POW(E.getEntry(2),2)))+(((((12)*(N.getEntry(0)))*((((-3)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(E.getEntry(2)))*(N.getEntry(2))))+(((6)*(((POW(E.getEntry(0),3))-(((3)*(E.getEntry(0)))*(POW(N.getEntry(0),2))))))*(POW(N.getEntry(2),2))))+((((POW(E.getEntry(0),4))-(POW(N.getEntry(0),4))))*(E.getEntry(4))))+(((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(N.getEntry(4)))))))+(((5)*(E.getEntry(1)))*(((((((24)*((((((5)*(POW(E.getEntry(0),4)))*(N.getEntry(0)))-(((10)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),3))))+(POW(N.getEntry(0),5)))))*(POW(N.getEntry(1),4)))-((((36)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),2)))*(((((((4)*(E.getEntry(0)))*(N.getEntry(0)))*(((-(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(E.getEntry(2)))+(((((POW(E.getEntry(0),4))-(((6)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4))))*(N.getEntry(2)))))))-((((8)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(N.getEntry(1)))*((((((POW(E.getEntry(0),3))-(((3)*(E.getEntry(0)))*(POW(N.getEntry(0),2)))))*(E.getEntry(3)))-(((N.getEntry(0))*((((-3)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(N.getEntry(3)))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((((((((-6)*(N.getEntry(0)))*((((-3)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(E.getEntry(2),2)))-(((((12)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))-((3)*(POW(N.getEntry(0),2))))))*(E.getEntry(2)))*(N.getEntry(2))))+((((6)*(N.getEntry(0)))*((((-3)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(2),2))))-(((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(E.getEntry(4))))+((((POW(E.getEntry(0),4))-(POW(N.getEntry(0),4))))*(N.getEntry(4))))))))))-((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3))*((((((-10)*(N.getEntry(2)))*(((((((E.getEntry(0))-(N.getEntry(0))))*(((E.getEntry(0))+(N.getEntry(0)))))*(E.getEntry(3)))+((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(N.getEntry(3))))))+(((10)*(E.getEntry(2)))*((((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(E.getEntry(3)))+((((-(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(N.getEntry(3)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((-(((N.getEntry(0))*(E.getEntry(5)))))+((E.getEntry(0))*(N.getEntry(5)))))))))))/(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),5));
		return result;
	}

	@Override
	protected double d1ElevationdENU1(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(1)))))/(((Math.sqrt((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))));
		return result;
	}

	@Override
	protected double d2ElevationdENU2(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((((-2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(1))))))-((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(1))))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1)))))))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((-(((U.getEntry(0))*(POW(E.getEntry(1),2)))))-((U.getEntry(0))*(POW(N.getEntry(1),2))))+(((E.getEntry(0))*(E.getEntry(1)))*(U.getEntry(1))))+(((N.getEntry(0))*(N.getEntry(1)))*(U.getEntry(1))))-((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(2)))+((N.getEntry(0))*(N.getEntry(2)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(2))))))))/((((2.0)*(Math.pow((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),1.5)))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))));
		return result;
	}

	@Override
	protected double d3ElevationdENU3(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((((-6)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))*(((((((-2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(1))))))-((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(1))))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1)))))))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((-(((U.getEntry(0))*(POW(E.getEntry(1),2)))))-((U.getEntry(0))*(POW(N.getEntry(1),2))))+(((E.getEntry(0))*(E.getEntry(1)))*(U.getEntry(1))))+(((N.getEntry(0))*(N.getEntry(1)))*(U.getEntry(1))))-((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(2)))+((N.getEntry(0))*(N.getEntry(2)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(2)))))))))-((((8)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((((-2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(1))))))-((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(1))))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1)))))))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((-(((U.getEntry(0))*(POW(E.getEntry(1),2)))))-((U.getEntry(0))*(POW(N.getEntry(1),2))))+(((E.getEntry(0))*(E.getEntry(1)))*(U.getEntry(1))))+(((N.getEntry(0))*(N.getEntry(1)))*(U.getEntry(1))))-((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(2)))+((N.getEntry(0))*(N.getEntry(2)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(2))))))))))+((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((((((((((2)*(E.getEntry(0)))*((((4)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(POW(E.getEntry(1),3)))+(((((2)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+((4)*(POW(N.getEntry(0),2))))))*(U.getEntry(0)))*(POW(N.getEntry(1),3))))-((((((((3)*(POW(E.getEntry(0),4)))+((8)*(POW(N.getEntry(0),4))))-(((6)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))+((POW(E.getEntry(0),2))*((((11)*(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))))*(POW(N.getEntry(1),2)))*(U.getEntry(1))))-((POW(E.getEntry(1),2))*(((((((-2)*(N.getEntry(0)))*((((10)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(N.getEntry(1)))+((((((8)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*((((11)*(POW(N.getEntry(0),2)))-((6)*(POW(U.getEntry(0),2)))))))+((POW(N.getEntry(0),2))*((((3)*(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))))*(U.getEntry(1)))))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(N.getEntry(1)))*((((((((-4)*(N.getEntry(0)))*(U.getEntry(0)))*(POW(U.getEntry(1),2)))+(((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(U.getEntry(0)))*(E.getEntry(2))))-(((U.getEntry(0))*(((((3)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))+((3)*(POW(U.getEntry(0),2))))))*(N.getEntry(2))))+((((2)*(N.getEntry(0)))*((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+((3)*(POW(U.getEntry(0),2))))))*(U.getEntry(2)))))))+((E.getEntry(1))*((((((((2)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+((10)*(POW(N.getEntry(0),2))))))*(U.getEntry(0)))*(POW(N.getEntry(1),2)))-((((((2)*(E.getEntry(0)))*(N.getEntry(0)))*((((5)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-((7)*(POW(U.getEntry(0),2))))))*(N.getEntry(1)))*(U.getEntry(1))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((((((-4)*(E.getEntry(0)))*(U.getEntry(0)))*(POW(U.getEntry(1),2)))-(((U.getEntry(0))*(((POW(E.getEntry(0),2))+((3)*(((POW(N.getEntry(0),2))+(POW(U.getEntry(0),2))))))))*(E.getEntry(2))))+(((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(U.getEntry(0)))*(N.getEntry(2))))+((((2)*(E.getEntry(0)))*((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+((3)*(POW(U.getEntry(0),2))))))*(U.getEntry(2))))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((((-2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(1),3)))+((U.getEntry(1))*(((-((((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2))))*((((E.getEntry(0))*(E.getEntry(2)))+((N.getEntry(0))*(N.getEntry(2))))))))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(U.getEntry(2)))))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(3)))+((N.getEntry(0))*(N.getEntry(3))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(3))))))))))))))/((((4.0)*(Math.pow((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2.5)))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),3))));
		return result;
	}

	@Override
	protected double d4ElevationdENU4(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((((((((((-3)*(U.getEntry(0)))*(((((-(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3))*(((((8)*(POW(E.getEntry(0),4)))-(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))))+(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((((8)*(POW(E.getEntry(0),4)))+(((36)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((7)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((POW(N.getEntry(0),2))*((((16)*(POW(E.getEntry(0),2)))-((5)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))-(((POW(N.getEntry(0),2))*((((-4)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(POW(E.getEntry(1),4)))+((((3)*(U.getEntry(0)))*((((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3))*(((((3)*(POW(E.getEntry(0),4)))-(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))+(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((((7)*(POW(E.getEntry(0),4)))-(((36)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((8)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((POW(E.getEntry(0),2))*((((5)*(POW(E.getEntry(0),2)))-((16)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))+(((POW(E.getEntry(0),2))*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),6))))))*(POW(N.getEntry(1),4))))-((((((12)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((-((((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))))+((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((7)*(POW(E.getEntry(0),2)))+((2)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(E.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(POW(N.getEntry(1),3)))*(U.getEntry(1))))-((((12)*(E.getEntry(0)))*(POW(E.getEntry(1),3)))*((((((N.getEntry(0))*(U.getEntry(0)))*(((((((-5)*((((4)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*((((2)*(POW(E.getEntry(0),2)))-((5)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((-8)*(POW(E.getEntry(0),4)))+(((5)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((13)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((-2)*(POW(E.getEntry(0),2)))+((3)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(N.getEntry(1)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((2)*(POW(E.getEntry(0),2)))+((7)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(U.getEntry(1)))))))-((((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),2)))*(((((((-2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+((6)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(POW(U.getEntry(1),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*(((((((E.getEntry(0))*(U.getEntry(0)))*((((((-3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((2)*(((((-2)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))))*(E.getEntry(2)))-((((N.getEntry(0))*(U.getEntry(0)))*((((((3)*((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((6)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(((3)*(POW(E.getEntry(0),2)))*(POW(U.getEntry(0),4))))))*(N.getEntry(2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((POW(E.getEntry(0),6))-((2)*(POW(N.getEntry(0),6))))+(((6)*(POW(N.getEntry(0),4)))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(((((3)*(POW(N.getEntry(0),4)))-(((6)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4))))))))*(U.getEntry(2))))))))))+(((6)*(POW(E.getEntry(1),2)))*((((((U.getEntry(0))*(((((((-3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((4)*(POW(E.getEntry(0),4)))-(((27)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((4)*(POW(N.getEntry(0),4))))))-((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((6)*(POW(E.getEntry(0),4)))-(((23)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((6)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((8)*(POW(E.getEntry(0),4)))-(((47)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+((((((-2)*(POW(E.getEntry(0),4)))+(((11)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),6))))))*(POW(N.getEntry(1),2)))+((((((2)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((((-3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))+((((3)*((((14)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((8)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((7)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((2)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),6))))))*(N.getEntry(1)))*(U.getEntry(1))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((-2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((6)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(POW(U.getEntry(1),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*(((((((E.getEntry(0))*(U.getEntry(0)))*((((((-3)*((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+((6)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))+(((3)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),4))))))*(E.getEntry(2)))+((((N.getEntry(0))*(U.getEntry(0)))*((((((-3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((2)*(((((3)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+(((((-2)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),4))))))*(N.getEntry(2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((2)*(POW(E.getEntry(0),6)))+(((3)*(POW(E.getEntry(0),4)))*(POW(N.getEntry(0),2))))-(POW(N.getEntry(0),6)))-((((6)*(POW(E.getEntry(0),2)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(U.getEntry(2)))))))))))))-((((4)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(N.getEntry(1)))*((((((((-6)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(POW(U.getEntry(1),3)))+((((3)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(U.getEntry(1)))*(((((((E.getEntry(0))*(N.getEntry(0)))*(((((-3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(E.getEntry(2)))+((((((POW(E.getEntry(0),6))-((2)*(POW(N.getEntry(0),6))))+(((6)*(POW(N.getEntry(0),4)))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(((((3)*(POW(N.getEntry(0),4)))-(((6)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))))*(N.getEntry(2))))-((((((2)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*(U.getEntry(2)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*((((-((((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(E.getEntry(3)))))+(((U.getEntry(0))*((((POW(E.getEntry(0),4))-((2)*(POW(N.getEntry(0),4))))+((POW(E.getEntry(0),2))*(((-(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))))))*(N.getEntry(3))))+((((N.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(U.getEntry(3))))))))))-(((4)*(E.getEntry(1)))*((((((((((3)*(E.getEntry(0)))*(N.getEntry(0)))*(U.getEntry(0)))*(((((((5)*((((3)*(POW(E.getEntry(0),2)))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))+((((5)*((((5)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((13)*(POW(E.getEntry(0),2)))-((8)*(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))+(((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(POW(N.getEntry(1),3)))-((((((3)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*(((POW(E.getEntry(0),2))-((14)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((-7)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(POW(N.getEntry(1),2)))*(U.getEntry(1))))-((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(N.getEntry(1)))*(((((((((-2)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(((((15)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((10)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(POW(U.getEntry(1),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*(((((((N.getEntry(0))*(U.getEntry(0)))*((((((-3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((2)*(((((3)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+(((((-2)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),4))))))*(E.getEntry(2)))+((((E.getEntry(0))*(U.getEntry(0)))*((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))))*(N.getEntry(2))))+(((((E.getEntry(0))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(U.getEntry(2))))))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*((((((((-6)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(POW(U.getEntry(1),3)))-((((3)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(U.getEntry(1)))*(((((((((((2)*(POW(E.getEntry(0),6)))+(((3)*(POW(E.getEntry(0),4)))*(POW(N.getEntry(0),2))))-(POW(N.getEntry(0),6)))-((((6)*(POW(E.getEntry(0),2)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4)))))*(E.getEntry(2)))+((((E.getEntry(0))*(N.getEntry(0)))*(((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(N.getEntry(2))))+((((((2)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*(U.getEntry(2)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*((((((U.getEntry(0))*((((((-2)*(POW(E.getEntry(0),4)))-((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4)))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),2))))))*(E.getEntry(3)))-(((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(N.getEntry(3))))+((((E.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(U.getEntry(3)))))))))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((((((((24)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(U.getEntry(0)))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(POW(U.getEntry(1),4)))+(((((12)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(POW(U.getEntry(1),2)))*(((((U.getEntry(0))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*((((E.getEntry(0))*(E.getEntry(2)))+((N.getEntry(0))*(N.getEntry(2))))))-(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-((3)*(POW(U.getEntry(0),2))))))*(U.getEntry(2)))))))+(((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(U.getEntry(1)))*(((-((((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2))))*((((E.getEntry(0))*(E.getEntry(3)))+((N.getEntry(0))*(N.getEntry(3))))))))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(U.getEntry(3)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*(((((((((-3)*(U.getEntry(0)))*((((((-2)*(POW(E.getEntry(0),4)))-((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4)))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),2))))))*(POW(E.getEntry(2),2)))-((((3)*(U.getEntry(0)))*((((POW(E.getEntry(0),4))-((2)*(POW(N.getEntry(0),4))))+((POW(E.getEntry(0),2))*(((-(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))))))*(POW(N.getEntry(2),2))))-((((((6)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(N.getEntry(2)))*(U.getEntry(2))))+((((6)*(E.getEntry(0)))*(E.getEntry(2)))*((((((N.getEntry(0))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(N.getEntry(2)))-(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(U.getEntry(2)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((((-6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(POW(U.getEntry(2),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(4)))+((N.getEntry(0))*(N.getEntry(4))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(4)))))))))))))))))/(((Math.pow((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3.5))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),4))));
		return result;
	}

	@Override
	protected double d5ElevationdENU5(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((((((((((((((-3)*(E.getEntry(0)))*(U.getEntry(0)))*((((((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))*(((((8)*(POW(E.getEntry(0),4)))-(((40)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((15)*(POW(N.getEntry(0),4))))))-((((20)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((4)*(POW(E.getEntry(0),4)))+(((15)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((10)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((2)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((4)*(POW(E.getEntry(0),4)))-(((90)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((95)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+(((((20)*(POW(N.getEntry(0),2)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((-5)*(POW(E.getEntry(0),2)))+((4)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),6))))+((((5)*(POW(N.getEntry(0),2)))*((((-4)*(POW(E.getEntry(0),2)))+((3)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),8))))))*(POW(E.getEntry(1),5)))-(((((3)*(N.getEntry(0)))*(U.getEntry(0)))*((((((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))*(((((15)*(POW(E.getEntry(0),4)))-(((40)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))+((((20)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((10)*(POW(E.getEntry(0),4)))-(((15)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((4)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((2)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((95)*(POW(E.getEntry(0),4)))-(((90)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((4)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+(((((20)*(POW(E.getEntry(0),2)))*((((4)*(POW(E.getEntry(0),2)))-((5)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))+((((5)*(POW(E.getEntry(0),2)))*((((3)*(POW(E.getEntry(0),2)))-((4)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),8))))))*(POW(N.getEntry(1),5))))+(((((15)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4))*(((((3)*(POW(E.getEntry(0),4)))-(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))+(((((20)*(POW(N.getEntry(0),2)))*((((3)*(POW(E.getEntry(0),2)))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(POW(U.getEntry(0),2))))-((((10)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*((((POW(E.getEntry(0),4))-(((10)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((4)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+((((4)*(POW(E.getEntry(0),2)))*(((((-2)*(POW(E.getEntry(0),4)))+(((3)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((5)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),6))))-(((POW(E.getEntry(0),2))*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),8))))))*(POW(N.getEntry(1),4)))*(U.getEntry(1))))+(((15)*(POW(E.getEntry(1),4)))*((((((N.getEntry(0))*(U.getEntry(0)))*((((((((-15)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))*(((((8)*(POW(E.getEntry(0),4)))-(((12)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4)))))-((((20)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((2)*(POW(E.getEntry(0),4)))-(((17)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-((((2)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((40)*(POW(E.getEntry(0),4)))-(((130)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((19)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))-((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((10)*(POW(E.getEntry(0),4)))-(((31)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((4)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),6))))+((((((-8)*(POW(E.getEntry(0),4)))+(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((3)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),8))))))*(N.getEntry(1)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4))*(((((8)*(POW(E.getEntry(0),4)))-(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))-(((((20)*(POW(E.getEntry(0),2)))*((((4)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(POW(U.getEntry(0),2))))+((((10)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((4)*(POW(E.getEntry(0),4)))+(((10)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((4)*(POW(N.getEntry(0),2)))*((((5)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))-(((POW(N.getEntry(0),2))*((((-4)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),8))))))*(U.getEntry(1)))))))+((((30)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),3)))*((((((((2)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(((((((-5)*((((3)*(POW(E.getEntry(0),2)))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((POW(E.getEntry(0),2))+((8)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((11)*(POW(E.getEntry(0),2)))+((4)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(E.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(POW(U.getEntry(1),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*((((-((((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*(((((((5)*((((3)*(POW(E.getEntry(0),2)))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))+((((5)*((((5)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((13)*(POW(E.getEntry(0),2)))-((8)*(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))+(((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(E.getEntry(2)))))+(((U.getEntry(0))*((((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3))*(((((3)*(POW(E.getEntry(0),4)))-(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))+(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((((7)*(POW(E.getEntry(0),4)))-(((36)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((8)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((POW(E.getEntry(0),2))*((((5)*(POW(E.getEntry(0),2)))-((16)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))+(((POW(E.getEntry(0),2))*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),6))))))*(N.getEntry(2))))-((((N.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((-((((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))))+((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((7)*(POW(E.getEntry(0),2)))+((2)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(E.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(U.getEntry(2))))))))))-(((30)*(POW(E.getEntry(1),3)))*(((((((E.getEntry(0))*(U.getEntry(0)))*((((((((-5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))*(((((4)*(POW(E.getEntry(0),4)))-(((41)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((18)*(POW(N.getEntry(0),4))))))-((((10)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((3)*(POW(E.getEntry(0),4)))-(((22)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((17)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-((((2)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((9)*(POW(E.getEntry(0),4)))-(((115)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((65)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((5)*(POW(E.getEntry(0),4)))-(((54)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((31)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),6))))+((((((-2)*(POW(E.getEntry(0),4)))+(((21)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((12)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),8))))))*(POW(N.getEntry(1),2)))-(((((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((((((5)*((((4)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))-((((10)*((((11)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(POW(U.getEntry(0),2))))-((((10)*(((POW(E.getEntry(0),2))-((6)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),4))))-((((2)*((((5)*(POW(E.getEntry(0),2)))-((9)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))+(((((-2)*(POW(E.getEntry(0),2)))+((3)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),8))))))*(N.getEntry(1)))*(U.getEntry(1))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((((((-2)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(((((((5)*((((4)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*((((8)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((4)*(POW(E.getEntry(0),2)))+((11)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(POW(U.getEntry(1),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*((((((U.getEntry(0))*(((((-(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3))*(((((8)*(POW(E.getEntry(0),4)))-(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))))+(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((((8)*(POW(E.getEntry(0),4)))+(((36)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((7)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((POW(N.getEntry(0),2))*((((16)*(POW(E.getEntry(0),2)))-((5)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))-(((POW(N.getEntry(0),2))*((((-4)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(E.getEntry(2)))+(((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*(((((((-5)*((((4)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*((((2)*(POW(E.getEntry(0),2)))-((5)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((-8)*(POW(E.getEntry(0),4)))+(((5)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((13)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((-2)*(POW(E.getEntry(0),2)))+((3)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(N.getEntry(2))))+((((E.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((2)*(POW(E.getEntry(0),2)))+((7)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(U.getEntry(2)))))))))))))-((((10)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(N.getEntry(1),2)))*(((((((-6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((((((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*(((POW(E.getEntry(0),2))-((8)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))-((((5)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+((4)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(E.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(POW(U.getEntry(1),3)))-((((3)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(U.getEntry(1)))*((((((E.getEntry(0))*(((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*(((POW(E.getEntry(0),2))-((14)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((-7)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(E.getEntry(2)))-((((3)*(N.getEntry(0)))*(((((-((((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))))+((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((7)*(POW(E.getEntry(0),2)))+((2)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(E.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(N.getEntry(2))))+(((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+((6)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(U.getEntry(2)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*(((((((E.getEntry(0))*(U.getEntry(0)))*((((((-3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((2)*(((((-2)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))))*(E.getEntry(3)))-((((N.getEntry(0))*(U.getEntry(0)))*((((((3)*((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((6)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(((3)*(POW(E.getEntry(0),2)))*(POW(U.getEntry(0),4))))))*(N.getEntry(3))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((POW(E.getEntry(0),6))-((2)*(POW(N.getEntry(0),6))))+(((6)*(POW(N.getEntry(0),4)))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(((((3)*(POW(N.getEntry(0),4)))-(((6)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4))))))))*(U.getEntry(3))))))))))+(((10)*(POW(E.getEntry(1),2)))*(((((((((3)*(N.getEntry(0)))*(U.getEntry(0)))*((((((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))*(((((18)*(POW(E.getEntry(0),4)))-(((41)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((4)*(POW(N.getEntry(0),4))))))+((((10)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((17)*(POW(E.getEntry(0),4)))-(((22)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((2)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((65)*(POW(E.getEntry(0),4)))-(((115)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((9)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((31)*(POW(E.getEntry(0),4)))-(((54)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((5)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),6))))+((((((12)*(POW(E.getEntry(0),4)))-(((21)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((2)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),8))))))*(POW(N.getEntry(1),3)))-(((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))*(((((4)*(POW(E.getEntry(0),4)))-(((27)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((4)*(POW(N.getEntry(0),4))))))-((((30)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*((((POW(E.getEntry(0),4))-(((12)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),2))))-((((10)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((5)*(POW(E.getEntry(0),4)))-(((11)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((5)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((5)*(POW(E.getEntry(0),4)))-(((32)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((5)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),6))))+((((((-2)*(POW(E.getEntry(0),4)))+(((11)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),8))))))*(POW(N.getEntry(1),2)))*(U.getEntry(1))))-((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(N.getEntry(1)))*((((((((-2)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(((((((15)*((((6)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*((((22)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((((((-10)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((11)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((-2)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),6))))))*(POW(U.getEntry(1),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*(((((((((3)*(E.getEntry(0)))*(N.getEntry(0)))*(U.getEntry(0)))*(((((((-5)*((((4)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*((((2)*(POW(E.getEntry(0),2)))-((5)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((-8)*(POW(E.getEntry(0),4)))+(((5)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((13)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((-2)*(POW(E.getEntry(0),2)))+((3)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(E.getEntry(2)))+(((U.getEntry(0))*(((((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((4)*(POW(E.getEntry(0),4)))-(((27)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((4)*(POW(N.getEntry(0),4))))))+((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((6)*(POW(E.getEntry(0),4)))-(((23)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((6)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((8)*(POW(E.getEntry(0),4)))-(((47)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+((((((2)*(POW(E.getEntry(0),4)))-(((11)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((2)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),6))))))*(N.getEntry(2))))+((((N.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*((((14)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))-((((((8)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((7)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((-2)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),6))))))*(U.getEntry(2))))))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*(((((((-6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((5)*((((8)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((5)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((4)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))-((POW(N.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(POW(U.getEntry(1),3)))-((((3)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(U.getEntry(1)))*(((((((3)*(E.getEntry(0)))*(((((((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((2)*(POW(E.getEntry(0),2)))+((7)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),4))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),6))))))*(E.getEntry(2)))+(((N.getEntry(0))*(((((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*((((14)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))-((((((8)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((7)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((-2)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),6))))))*(N.getEntry(2))))+(((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((6)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(U.getEntry(2)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*(((((((E.getEntry(0))*(U.getEntry(0)))*((((((-3)*((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+((6)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))+(((3)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),4))))))*(E.getEntry(3)))+((((N.getEntry(0))*(U.getEntry(0)))*((((((-3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((2)*(((((3)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+(((((-2)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),4))))))*(N.getEntry(3))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((2)*(POW(E.getEntry(0),6)))+(((3)*(POW(E.getEntry(0),4)))*(POW(N.getEntry(0),2))))-(POW(N.getEntry(0),6)))-((((6)*(POW(E.getEntry(0),2)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(U.getEntry(3)))))))))))))-((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(N.getEntry(1)))*((((((((((24)*(N.getEntry(0)))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(U.getEntry(0)))*(((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((10)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(POW(U.getEntry(1),4)))-(((((12)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(POW(U.getEntry(1),2)))*((((((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*(((((-15)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((10)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(E.getEntry(2)))+(((U.getEntry(0))*((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+((6)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(N.getEntry(2))))+(((((3)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(U.getEntry(2)))))))+(((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(U.getEntry(1)))*(((((((E.getEntry(0))*(N.getEntry(0)))*(((((-3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(E.getEntry(3)))+((((((POW(E.getEntry(0),6))-((2)*(POW(N.getEntry(0),6))))+(((6)*(POW(N.getEntry(0),4)))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(((((3)*(POW(N.getEntry(0),4)))-(((6)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))))*(N.getEntry(3))))-((((((2)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*(U.getEntry(3)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*((((((((((3)*(N.getEntry(0)))*(U.getEntry(0)))*((((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((2)*(((((3)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+(((((2)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),4))))))*(POW(E.getEntry(2),2)))-(((((3)*(N.getEntry(0)))*(U.getEntry(0)))*((((((3)*((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((6)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(((3)*(POW(E.getEntry(0),2)))*(POW(U.getEntry(0),4))))))*(POW(N.getEntry(2),2))))+(((((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((POW(E.getEntry(0),6))-((2)*(POW(N.getEntry(0),6))))+(((6)*(POW(N.getEntry(0),4)))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(((((3)*(POW(N.getEntry(0),4)))-(((6)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4))))))))*(N.getEntry(2)))*(U.getEntry(2))))+(((6)*(E.getEntry(2)))*((((((E.getEntry(0))*(U.getEntry(0)))*((((((-3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((2)*(((((-2)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))))*(N.getEntry(2)))-(((((E.getEntry(0))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(U.getEntry(2)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((((-6)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*(POW(U.getEntry(2),2)))+(((U.getEntry(0))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((-(((((E.getEntry(0))*(N.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(E.getEntry(4)))))+(((((POW(E.getEntry(0),4))-((2)*(POW(N.getEntry(0),4))))+((POW(E.getEntry(0),2))*(((-(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))))*(N.getEntry(4)))))))+((((N.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(POW(U.getEntry(0),4)))))*(U.getEntry(4)))))))))))))-(((5)*(E.getEntry(1)))*((((((((((3)*(E.getEntry(0)))*(U.getEntry(0)))*((((((((15)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))*((((POW(E.getEntry(0),4))-(((12)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))+((((20)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((2)*(POW(E.getEntry(0),4)))-(((17)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+((((2)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((19)*(POW(E.getEntry(0),4)))-(((130)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((40)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((4)*(POW(E.getEntry(0),4)))-(((31)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((10)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),6))))+((((((3)*(POW(E.getEntry(0),4)))-(((24)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),8))))))*(POW(N.getEntry(1),4)))+(((((((12)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((((((5)*((((3)*(POW(E.getEntry(0),2)))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4)))-((((10)*((((3)*(POW(E.getEntry(0),2)))-((11)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(POW(U.getEntry(0),2))))-((((10)*((((6)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),4))))-((((2)*((((9)*(POW(E.getEntry(0),2)))-((5)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))+(((((-3)*(POW(E.getEntry(0),2)))+((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),8))))))*(POW(N.getEntry(1),3)))*(U.getEntry(1))))-((((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(N.getEntry(1),2)))*((((((((-2)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(((((((15)*(((POW(E.getEntry(0),2))-((6)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))+((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((POW(E.getEntry(0),2))+((22)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))-((((((11)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((10)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(POW(U.getEntry(1),2)))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*((((((U.getEntry(0))*(((((((-3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))*(((((4)*(POW(E.getEntry(0),4)))-(((27)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((4)*(POW(N.getEntry(0),4))))))-((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(((((6)*(POW(E.getEntry(0),4)))-(((23)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((6)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((8)*(POW(E.getEntry(0),4)))-(((47)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),4))))+((((((-2)*(POW(E.getEntry(0),4)))+(((11)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),6))))))*(E.getEntry(2)))-((((((3)*(E.getEntry(0)))*(N.getEntry(0)))*(U.getEntry(0)))*(((((((5)*((((3)*(POW(E.getEntry(0),2)))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))+((((5)*((((5)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((13)*(POW(E.getEntry(0),2)))-((8)*(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))+(((((3)*(POW(E.getEntry(0),2)))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(N.getEntry(2))))+((((E.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*(((POW(E.getEntry(0),2))-((14)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((-7)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(U.getEntry(2))))))))))-((((4)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(N.getEntry(1)))*(((((((((-6)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-(((45)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+(((15)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))+(POW(U.getEntry(0),6)))))*(POW(U.getEntry(1),3)))+((((3)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(U.getEntry(1)))*((((((N.getEntry(0))*(((((((-3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))+((((3)*((((14)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((8)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((7)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))+(((((2)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),6))))))*(E.getEntry(2)))+(((E.getEntry(0))*(((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3)))-((((3)*(((POW(E.getEntry(0),2))-((14)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(POW(U.getEntry(0),2))))+((((((-7)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((8)*(POW(N.getEntry(0),4)))))*(POW(U.getEntry(0),4))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),6))))))*(N.getEntry(2))))-(((((((2)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(((((15)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((10)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(U.getEntry(2)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*(((((((N.getEntry(0))*(U.getEntry(0)))*((((((-3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((2)*(((((3)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+(((((-2)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),4))))))*(E.getEntry(3)))+((((E.getEntry(0))*(U.getEntry(0)))*((((((3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))))*(N.getEntry(3))))+(((((E.getEntry(0))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(U.getEntry(3))))))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))*((((((((((24)*(E.getEntry(0)))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*(U.getEntry(0)))*(((((5)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((10)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(POW(U.getEntry(1),4)))-(((((12)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(POW(U.getEntry(1),2)))*((((((U.getEntry(0))*((((((-3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((6)*(POW(E.getEntry(0),2)))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(E.getEntry(2)))+(((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*(((((-15)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((10)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(N.getEntry(2))))+(((((3)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(U.getEntry(2)))))))-(((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(U.getEntry(1)))*(((((((((((2)*(POW(E.getEntry(0),6)))+(((3)*(POW(E.getEntry(0),4)))*(POW(N.getEntry(0),2))))-(POW(N.getEntry(0),6)))-((((6)*(POW(E.getEntry(0),2)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4)))))*(E.getEntry(3)))+((((E.getEntry(0))*(N.getEntry(0)))*(((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(N.getEntry(3))))+((((((2)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*(U.getEntry(3)))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2))*((((((((((3)*(E.getEntry(0)))*(U.getEntry(0)))*((((((3)*((((2)*(POW(E.getEntry(0),2)))-((3)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW(E.getEntry(0),2))+((6)*(POW(N.getEntry(0),2))))))*(POW(U.getEntry(0),2))))-(((3)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),4))))))*(POW(E.getEntry(2),2)))+(((((3)*(E.getEntry(0)))*(U.getEntry(0)))*((((((-3)*(((POW(E.getEntry(0),2))-((4)*(POW(N.getEntry(0),2))))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((2)*(((((-2)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+((3)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))-((((POW(E.getEntry(0),2))-((2)*(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),4))))))*(POW(N.getEntry(2),2))))-(((((((6)*(E.getEntry(0)))*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((((3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))-(POW(U.getEntry(0),4)))))*(N.getEntry(2)))*(U.getEntry(2))))+(((6)*(E.getEntry(2)))*((((((N.getEntry(0))*(U.getEntry(0)))*((((((3)*((((4)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2)))))*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((2)*(((((3)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((2)*(POW(N.getEntry(0),4))))))*(POW(U.getEntry(0),2))))+(((((2)*(POW(E.getEntry(0),2)))-(POW(N.getEntry(0),2))))*(POW(U.getEntry(0),4))))))*(N.getEntry(2)))-(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((2)*(POW(E.getEntry(0),6)))+(((3)*(POW(E.getEntry(0),4)))*(POW(N.getEntry(0),2))))-(POW(N.getEntry(0),6)))-((((6)*(POW(E.getEntry(0),2)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4))))))*(U.getEntry(2)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((((-6)*(E.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*(POW(U.getEntry(2),2)))-(((U.getEntry(0))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((((((2)*(POW(E.getEntry(0),4)))+((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))-((POW(N.getEntry(0),2))*(((POW(N.getEntry(0),2))+(POW(U.getEntry(0),2)))))))*(E.getEntry(4)))+((((E.getEntry(0))*(N.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(N.getEntry(4)))))))+((((E.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(POW(U.getEntry(0),4)))))*(U.getEntry(4))))))))))))))))+((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),3))*(((((((((24)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))*((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(((10)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+((5)*(POW(U.getEntry(0),4))))))*(POW(U.getEntry(1),5)))+(((((60)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(POW(U.getEntry(1),3)))*(((((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4))))*((((E.getEntry(0))*(E.getEntry(2)))+((N.getEntry(0))*(N.getEntry(2))))))+(((((4)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(U.getEntry(2)))))))+(((((20)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(POW(U.getEntry(1),2)))*(((((U.getEntry(0))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*((((E.getEntry(0))*(E.getEntry(3)))+((N.getEntry(0))*(N.getEntry(3))))))-(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-((3)*(POW(U.getEntry(0),2))))))*(U.getEntry(3)))))))-((((5)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(U.getEntry(1)))*((((((((3)*(((((((-2)*(POW(E.getEntry(0),6)))+(POW(N.getEntry(0),6)))+((((6)*(POW(E.getEntry(0),2)))*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))-((POW(N.getEntry(0),2))*(POW(U.getEntry(0),4))))-(((3)*(POW(E.getEntry(0),4)))*(((POW(N.getEntry(0),2))-((2)*(POW(U.getEntry(0),2)))))))))*(POW(E.getEntry(2),2)))+(((3)*(((((POW(E.getEntry(0),6))-((2)*(POW(N.getEntry(0),6))))+(((6)*(POW(N.getEntry(0),4)))*(POW(U.getEntry(0),2))))-((POW(E.getEntry(0),2))*(((((3)*(POW(N.getEntry(0),4)))-(((6)*(POW(N.getEntry(0),2)))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4))))))))*(POW(N.getEntry(2),2))))-(((((((12)*(N.getEntry(0)))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))-(POW(U.getEntry(0),2)))))*(N.getEntry(2)))*(U.getEntry(2))))+((((6)*(E.getEntry(0)))*(E.getEntry(2)))*(((((N.getEntry(0))*(((((-3)*(POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2)))+(((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(POW(U.getEntry(0),2))))+(POW(U.getEntry(0),4)))))*(N.getEntry(2)))+(((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((-3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(U.getEntry(2)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((((6)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-((3)*(POW(U.getEntry(0),2))))))*(POW(U.getEntry(2),2)))+((((POW((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),2))-(POW(U.getEntry(0),4))))*((((E.getEntry(0))*(E.getEntry(4)))+((N.getEntry(0))*(N.getEntry(4)))))))+(((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(U.getEntry(4))))))))))+((POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),3))*((((((10)*(E.getEntry(2)))*((((-((((U.getEntry(0))*((((((-2)*(POW(E.getEntry(0),4)))-((POW(E.getEntry(0),2))*(POW(N.getEntry(0),2))))+(POW(N.getEntry(0),4)))+((POW(N.getEntry(0),2))*(POW(U.getEntry(0),2))))))*(E.getEntry(3)))))+(((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(N.getEntry(3))))-((((E.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(U.getEntry(3))))))+(((10)*(N.getEntry(2)))*((((((((E.getEntry(0))*(N.getEntry(0)))*(U.getEntry(0)))*((((3)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))+(POW(U.getEntry(0),2)))))*(E.getEntry(3)))-(((U.getEntry(0))*((((POW(E.getEntry(0),4))-((2)*(POW(N.getEntry(0),4))))+((POW(E.getEntry(0),2))*(((-(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))))))*(N.getEntry(3))))-((((N.getEntry(0))*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2)))))*(U.getEntry(3)))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(((((10)*(U.getEntry(2)))*(((-((((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))-(POW(U.getEntry(0),2))))*((((E.getEntry(0))*(E.getEntry(3)))+((N.getEntry(0))*(N.getEntry(3))))))))-((((2)*(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))))*(U.getEntry(0)))*(U.getEntry(3))))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*(((-(((U.getEntry(0))*((((E.getEntry(0))*(E.getEntry(5)))+((N.getEntry(0))*(N.getEntry(5))))))))+((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2))))*(U.getEntry(5)))))))))))))))))/(((Math.pow((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)),4.5))*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),5))));
		return result;
	}

	@Override
	protected double d1RangedENU1(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1)))))/(Math.sqrt(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))));
		return result;
	}

	@Override
	protected double d2RangedENU2(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2))))))))/(((2.0)*(Math.pow(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),1.5))));
		return result;
	}

	@Override
	protected double d3RangedENU3(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((-6)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3))))))))/(((4.0)*(Math.pow(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2.5))));
		return result;
	}

	@Override
	protected double d4RangedENU4(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((-10)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((-6)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((((-6)*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2))))))*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))+((((4)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(((((((((((3)*(POW(E.getEntry(2),2)))+((3)*(POW(N.getEntry(2),2))))+((3)*(POW(U.getEntry(2),2))))+(((4)*(E.getEntry(1)))*(E.getEntry(3))))+(((4)*(N.getEntry(1)))*(N.getEntry(3))))+(((4)*(U.getEntry(1)))*(U.getEntry(3))))+((E.getEntry(0))*(E.getEntry(4))))+((N.getEntry(0))*(N.getEntry(4))))+((U.getEntry(0))*(U.getEntry(4)))))))))))/(((8.0)*(Math.pow(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),3.5))));
		return result;
	}

	@Override
	protected double d5RangedENU5(RealVector E, RealVector N, RealVector U) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((-14)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((-10)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((-6)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((((-6)*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2))))))*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))+((((4)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(((((((((((3)*(POW(E.getEntry(2),2)))+((3)*(POW(N.getEntry(2),2))))+((3)*(POW(U.getEntry(2),2))))+(((4)*(E.getEntry(1)))*(E.getEntry(3))))+(((4)*(N.getEntry(1)))*(N.getEntry(3))))+(((4)*(U.getEntry(1)))*(U.getEntry(3))))+((E.getEntry(0))*(E.getEntry(4))))+((N.getEntry(0))*(N.getEntry(4))))+((U.getEntry(0))*(U.getEntry(4))))))))))))+(((4)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*((((((-5)*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2))))))*(((((-6)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))))-(((3)*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*((((((-6)*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2))))))*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))+((((4)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*(((((((((((3)*(POW(E.getEntry(2),2)))+((3)*(POW(N.getEntry(2),2))))+((3)*(POW(U.getEntry(2),2))))+(((4)*(E.getEntry(1)))*(E.getEntry(3))))+(((4)*(N.getEntry(1)))*(N.getEntry(3))))+(((4)*(U.getEntry(1)))*(U.getEntry(3))))+((E.getEntry(0))*(E.getEntry(4))))+((N.getEntry(0))*(N.getEntry(4))))+((U.getEntry(0))*(U.getEntry(4))))))))))+(((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2))))*((((((((8)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3))))))-((((8)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2))))))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))-(((6)*((((-2)*(POW((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))),2)))+(((2)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((((POW(E.getEntry(1),2))+(POW(N.getEntry(1),2)))+(POW(U.getEntry(1),2)))+((E.getEntry(0))*(E.getEntry(2))))+((N.getEntry(0))*(N.getEntry(2))))+((U.getEntry(0))*(U.getEntry(2)))))))))*(((((((((3)*(E.getEntry(1)))*(E.getEntry(2)))+(((3)*(N.getEntry(1)))*(N.getEntry(2))))+(((3)*(U.getEntry(1)))*(U.getEntry(2))))+((E.getEntry(0))*(E.getEntry(3))))+((N.getEntry(0))*(N.getEntry(3))))+((U.getEntry(0))*(U.getEntry(3)))))))+((((20)*((((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)))))*(((((E.getEntry(0))*(E.getEntry(1)))+((N.getEntry(0))*(N.getEntry(1))))+((U.getEntry(0))*(U.getEntry(1))))))*(((((((((((3)*(POW(E.getEntry(2),2)))+((3)*(POW(N.getEntry(2),2))))+((3)*(POW(U.getEntry(2),2))))+(((4)*(E.getEntry(1)))*(E.getEntry(3))))+(((4)*(N.getEntry(1)))*(N.getEntry(3))))+(((4)*(U.getEntry(1)))*(U.getEntry(3))))+((E.getEntry(0))*(E.getEntry(4))))+((N.getEntry(0))*(N.getEntry(4))))+((U.getEntry(0))*(U.getEntry(4)))))))+(((4)*(POW(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),2)))*((((((((((((10)*(E.getEntry(2)))*(E.getEntry(3)))+(((10)*(N.getEntry(2)))*(N.getEntry(3))))+(((10)*(U.getEntry(2)))*(U.getEntry(3))))+(((5)*(E.getEntry(1)))*(E.getEntry(4))))+(((5)*(N.getEntry(1)))*(N.getEntry(4))))+(((5)*(U.getEntry(1)))*(U.getEntry(4))))+((E.getEntry(0))*(E.getEntry(5))))+((N.getEntry(0))*(N.getEntry(5))))+((U.getEntry(0))*(U.getEntry(5))))))))))))))/(((16.0)*(Math.pow(((POW(E.getEntry(0),2))+(POW(N.getEntry(0),2)))+(POW(U.getEntry(0),2)),4.5))));
		return result;
	}

	@Override
	protected double d1EastdAER1(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(Math.cos(E.getEntry(0))))*(A.getEntry(1)))+((Math.sin(A.getEntry(0)))*((((Math.cos(E.getEntry(0)))*(R.getEntry(1)))-(((R.getEntry(0))*(E.getEntry(1)))*(Math.sin(E.getEntry(0)))))));
		return result;
	}

	@Override
	protected double d2EastdAER2(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (-(((Math.sin(A.getEntry(0)))*((((Math.cos(E.getEntry(0)))*((((R.getEntry(0))*(((POW(A.getEntry(1),2))+(POW(E.getEntry(1),2)))))-(R.getEntry(2)))))+((((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))*(Math.sin(E.getEntry(0)))))))))+((Math.cos(A.getEntry(0)))*(((((R.getEntry(0))*(Math.cos(E.getEntry(0))))*(A.getEntry(2)))+(((2)*(A.getEntry(1)))*((((Math.cos(E.getEntry(0)))*(R.getEntry(1)))-(((R.getEntry(0))*(E.getEntry(1)))*(Math.sin(E.getEntry(0))))))))));
		return result;
	}

	@Override
	protected double d3EastdAER3(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*(((((-(((R.getEntry(0))*(POW(A.getEntry(1),3)))))+(((3)*(R.getEntry(1)))*(A.getEntry(2))))+(((3)*(A.getEntry(1)))*(((-(((R.getEntry(0))*(POW(E.getEntry(1),2)))))+(R.getEntry(2))))))+((R.getEntry(0))*(A.getEntry(3))))))+(((((-3)*(((((POW(A.getEntry(1),2))*(R.getEntry(1)))+(((R.getEntry(0))*(A.getEntry(1)))*(A.getEntry(2))))+((E.getEntry(1))*((((E.getEntry(1))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))))))+(R.getEntry(3))))*(Math.sin(A.getEntry(0)))))))-((((((3)*(Math.cos(A.getEntry(0))))*(((((R.getEntry(0))*(E.getEntry(1)))*(A.getEntry(2)))+((A.getEntry(1))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))))))+((((((((((-3)*(R.getEntry(0)))*(POW(A.getEntry(1),2)))*(E.getEntry(1)))-((R.getEntry(0))*(POW(E.getEntry(1),3))))+(((3)*(R.getEntry(1)))*(E.getEntry(2))))+(((3)*(E.getEntry(1)))*(R.getEntry(2))))+((R.getEntry(0))*(E.getEntry(3)))))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0))));
		return result;
	}

	@Override
	protected double d4EastdAER4(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((((((R.getEntry(0))*(Math.cos(E.getEntry(0))))*(POW(A.getEntry(1),4)))*(Math.sin(A.getEntry(0))))+((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*((((((((-6)*(R.getEntry(0)))*(POW(E.getEntry(1),2)))*(A.getEntry(2)))+(((6)*(A.getEntry(2)))*(R.getEntry(2))))+(((4)*(R.getEntry(1)))*(A.getEntry(3))))+((R.getEntry(0))*(A.getEntry(4))))))+((((((((R.getEntry(0))*(POW(E.getEntry(1),4)))-(((3)*(R.getEntry(0)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2))))))-(((6)*(POW(E.getEntry(1),2)))*(R.getEntry(2))))-(((4)*(E.getEntry(1)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(R.getEntry(4))))*(Math.sin(A.getEntry(0))))))))-((((((((6)*(Math.cos(A.getEntry(0))))*(A.getEntry(2)))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))+(((((4)*(R.getEntry(0)))*(Math.cos(A.getEntry(0))))*(E.getEntry(1)))*(A.getEntry(3))))+((((((((((-4)*(POW(E.getEntry(1),3)))*(R.getEntry(1)))-((((6)*(R.getEntry(0)))*(POW(E.getEntry(1),2)))*(E.getEntry(2))))+(((6)*(E.getEntry(2)))*(R.getEntry(2))))+(((4)*(R.getEntry(1)))*(E.getEntry(3))))+(((4)*(E.getEntry(1)))*(R.getEntry(3))))+((R.getEntry(0))*(E.getEntry(4)))))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0)))))+((((4)*(Math.cos(A.getEntry(0))))*(POW(A.getEntry(1),3)))*(((-(((Math.cos(E.getEntry(0)))*(R.getEntry(1)))))+(((R.getEntry(0))*(E.getEntry(1)))*(Math.sin(E.getEntry(0))))))))+(((6)*(POW(A.getEntry(1),2)))*(((-(((Math.cos(E.getEntry(0)))*(((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(A.getEntry(2)))+((((-(((R.getEntry(0))*(POW(E.getEntry(1),2)))))+(R.getEntry(2))))*(Math.sin(A.getEntry(0)))))))))+(((((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))*(Math.sin(A.getEntry(0))))*(Math.sin(E.getEntry(0))))))))+(((4)*(A.getEntry(1)))*(((-(((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*(((((3)*(E.getEntry(1)))*((((E.getEntry(1))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))-(R.getEntry(3)))))+((((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3)))))*(Math.sin(A.getEntry(0)))))))))+(((((Math.cos(A.getEntry(0)))*((((((R.getEntry(0))*(POW(E.getEntry(1),3)))-(((3)*(R.getEntry(1)))*(E.getEntry(2))))-(((3)*(E.getEntry(1)))*(R.getEntry(2))))-((R.getEntry(0))*(E.getEntry(3))))))+(((((3)*(R.getEntry(0)))*(E.getEntry(1)))*(A.getEntry(2)))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0)))))));
		return result;
	}

	@Override
	protected double d5EastdAER5(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(Math.cos(E.getEntry(0))))*(POW(A.getEntry(1),5)))+((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*(((((((((((-30)*(R.getEntry(0)))*(E.getEntry(1)))*(A.getEntry(2)))*(E.getEntry(2)))+(((10)*(R.getEntry(2)))*(A.getEntry(3))))-(((10)*(POW(E.getEntry(1),2)))*(((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3)))))))+(((10)*(A.getEntry(2)))*(R.getEntry(3))))+(((5)*(R.getEntry(1)))*(A.getEntry(4))))+((R.getEntry(0))*(A.getEntry(5))))))+(((((5)*((((((((POW(E.getEntry(1),4))*(R.getEntry(1)))+((((2)*(R.getEntry(0)))*(POW(E.getEntry(1),3)))*(E.getEntry(2))))-(((3)*(R.getEntry(1)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2))))))-(((2)*(R.getEntry(0)))*((((A.getEntry(2))*(A.getEntry(3)))+((E.getEntry(2))*(E.getEntry(3)))))))-(((2)*(POW(E.getEntry(1),2)))*(R.getEntry(3))))-((E.getEntry(1))*((((((6)*(E.getEntry(2)))*(R.getEntry(2)))+(((4)*(R.getEntry(1)))*(E.getEntry(3))))+((R.getEntry(0))*(E.getEntry(4)))))))))+(R.getEntry(5))))*(Math.sin(A.getEntry(0))))))))-((((((5)*(Math.cos(A.getEntry(0))))*((((((((-2)*(R.getEntry(0)))*(POW(E.getEntry(1),3)))*(A.getEntry(2)))+(((2)*(E.getEntry(2)))*(((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3)))))))+((((2)*(R.getEntry(0)))*(A.getEntry(2)))*(E.getEntry(3))))+((E.getEntry(1))*((((((6)*(A.getEntry(2)))*(R.getEntry(2)))+(((4)*(R.getEntry(1)))*(A.getEntry(3))))+((R.getEntry(0))*(A.getEntry(4)))))))))+(((((((((((R.getEntry(0))*(POW(E.getEntry(1),5)))-(((10)*(POW(E.getEntry(1),3)))*(R.getEntry(2))))+(((10)*(R.getEntry(2)))*(E.getEntry(3))))-(((10)*(POW(E.getEntry(1),2)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(((10)*(E.getEntry(2)))*(R.getEntry(3))))+(((5)*(R.getEntry(1)))*(E.getEntry(4))))+(((5)*(E.getEntry(1)))*(((((-3)*(R.getEntry(0)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2)))))+(R.getEntry(4))))))+((R.getEntry(0))*(E.getEntry(5)))))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0)))))+((((5)*(POW(A.getEntry(1),4)))*(Math.sin(A.getEntry(0))))*((((Math.cos(E.getEntry(0)))*(R.getEntry(1)))-(((R.getEntry(0))*(E.getEntry(1)))*(Math.sin(E.getEntry(0))))))))+(((10)*(POW(A.getEntry(1),3)))*((((Math.cos(E.getEntry(0)))*((((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(POW(E.getEntry(1),2)))-((Math.cos(A.getEntry(0)))*(R.getEntry(2))))+(((R.getEntry(0))*(A.getEntry(2)))*(Math.sin(A.getEntry(0)))))))+(((Math.cos(A.getEntry(0)))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))*(Math.sin(E.getEntry(0))))))))+(((5)*(A.getEntry(1)))*((((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*(((((((R.getEntry(0))*(POW(E.getEntry(1),4)))-(((3)*(R.getEntry(0)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2))))))-(((6)*(POW(E.getEntry(1),2)))*(R.getEntry(2))))-(((4)*(E.getEntry(1)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(R.getEntry(4)))))+(((((((6)*(A.getEntry(2)))*((((R.getEntry(0))*(POW(E.getEntry(1),2)))-(R.getEntry(2)))))-(((4)*(R.getEntry(1)))*(A.getEntry(3))))-((R.getEntry(0))*(A.getEntry(4)))))*(Math.sin(A.getEntry(0)))))))+((((((Math.cos(A.getEntry(0)))*(((((((((4)*(POW(E.getEntry(1),3)))*(R.getEntry(1)))+((((6)*(R.getEntry(0)))*(POW(E.getEntry(1),2)))*(E.getEntry(2))))-(((6)*(E.getEntry(2)))*(R.getEntry(2))))-(((4)*(R.getEntry(1)))*(E.getEntry(3))))-(((4)*(E.getEntry(1)))*(R.getEntry(3))))-((R.getEntry(0))*(E.getEntry(4))))))+((((6)*(A.getEntry(2)))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))*(Math.sin(A.getEntry(0)))))+(((((4)*(R.getEntry(0)))*(E.getEntry(1)))*(A.getEntry(3)))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0))))))))+(((10)*(POW(A.getEntry(1),2)))*((((Math.cos(E.getEntry(0)))*(((-(((Math.cos(A.getEntry(0)))*(((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3))))))))+((((((3)*(E.getEntry(1)))*((((E.getEntry(1))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))-(R.getEntry(3))))*(Math.sin(A.getEntry(0)))))))+(((((-((((R.getEntry(0))*(POW(E.getEntry(1),3)))*(Math.sin(A.getEntry(0))))))+((((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))*(Math.sin(A.getEntry(0)))))+(((3)*(E.getEntry(1)))*(((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(A.getEntry(2)))+((R.getEntry(2))*(Math.sin(A.getEntry(0)))))))))*(Math.sin(E.getEntry(0)))))));
		return result;
	}

	@Override
	protected double d1NorthdAER1(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((Math.cos(A.getEntry(0)))*(Math.cos(E.getEntry(0))))*(R.getEntry(1)))-((R.getEntry(0))*(((((Math.cos(E.getEntry(0)))*(A.getEntry(1)))*(Math.sin(A.getEntry(0))))+(((Math.cos(A.getEntry(0)))*(E.getEntry(1)))*(Math.sin(E.getEntry(0)))))));
		return result;
	}

	@Override
	protected double d2NorthdAER2(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (-(((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*((((R.getEntry(0))*(((POW(A.getEntry(1),2))+(POW(E.getEntry(1),2)))))-(R.getEntry(2)))))+((((((2)*(A.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(A.getEntry(2)))))*(Math.sin(A.getEntry(0)))))))))-((((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(E.getEntry(2)))+(((2)*(E.getEntry(1)))*((((Math.cos(A.getEntry(0)))*(R.getEntry(1)))-(((R.getEntry(0))*(A.getEntry(1)))*(Math.sin(A.getEntry(0)))))))))*(Math.sin(E.getEntry(0))));
		return result;
	}

	@Override
	protected double d3NorthdAER3(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*((((-3)*(((((POW(A.getEntry(1),2))*(R.getEntry(1)))+(((R.getEntry(0))*(A.getEntry(1)))*(A.getEntry(2))))+((E.getEntry(1))*((((E.getEntry(1))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))))))+(R.getEntry(3)))))+(((((((R.getEntry(0))*(POW(A.getEntry(1),3)))-(((3)*(R.getEntry(1)))*(A.getEntry(2))))+(((3)*(A.getEntry(1)))*((((R.getEntry(0))*(POW(E.getEntry(1),2)))-(R.getEntry(2))))))-((R.getEntry(0))*(A.getEntry(3)))))*(Math.sin(A.getEntry(0)))))))+(((((Math.cos(A.getEntry(0)))*(((((((((3)*(R.getEntry(0)))*(POW(A.getEntry(1),2)))*(E.getEntry(1)))+((R.getEntry(0))*(POW(E.getEntry(1),3))))-(((3)*(R.getEntry(1)))*(E.getEntry(2))))-(((3)*(E.getEntry(1)))*(R.getEntry(2))))-((R.getEntry(0))*(E.getEntry(3))))))+(((3)*(((((R.getEntry(0))*(E.getEntry(1)))*(A.getEntry(2)))+((A.getEntry(1))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))))))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0))));
		return result;
	}

	@Override
	protected double d4NorthdAER4(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*((((((((((R.getEntry(0))*(POW(A.getEntry(1),4)))+((R.getEntry(0))*(POW(E.getEntry(1),4))))-(((3)*(R.getEntry(0)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2))))))+(((6)*(POW(A.getEntry(1),2)))*((((R.getEntry(0))*(POW(E.getEntry(1),2)))-(R.getEntry(2))))))-(((6)*(POW(E.getEntry(1),2)))*(R.getEntry(2))))-(((4)*(A.getEntry(1)))*(((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3)))))))-(((4)*(E.getEntry(1)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(R.getEntry(4)))))+((((((((((4)*(POW(A.getEntry(1),3)))*(R.getEntry(1)))+((((6)*(R.getEntry(0)))*(POW(A.getEntry(1),2)))*(A.getEntry(2))))+(((6)*(A.getEntry(2)))*((((R.getEntry(0))*(POW(E.getEntry(1),2)))-(R.getEntry(2))))))-(((4)*(R.getEntry(1)))*(A.getEntry(3))))+(((4)*(A.getEntry(1)))*(((((3)*(E.getEntry(1)))*((((E.getEntry(1))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))-(R.getEntry(3))))))-((R.getEntry(0))*(A.getEntry(4)))))*(Math.sin(A.getEntry(0)))))))+(((((Math.cos(A.getEntry(0)))*(((((((((((4)*(POW(E.getEntry(1),3)))*(R.getEntry(1)))+(((((12)*(R.getEntry(0)))*(A.getEntry(1)))*(E.getEntry(1)))*(A.getEntry(2))))+((((6)*(R.getEntry(0)))*(POW(E.getEntry(1),2)))*(E.getEntry(2))))+(((6)*(POW(A.getEntry(1),2)))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))))-(((6)*(E.getEntry(2)))*(R.getEntry(2))))-(((4)*(R.getEntry(1)))*(E.getEntry(3))))-(((4)*(E.getEntry(1)))*(R.getEntry(3))))-((R.getEntry(0))*(E.getEntry(4))))))+(((2)*((((((((-2)*(R.getEntry(0)))*(POW(A.getEntry(1),3)))*(E.getEntry(1)))+(((3)*(A.getEntry(2)))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))))+((((2)*(R.getEntry(0)))*(E.getEntry(1)))*(A.getEntry(3))))+((A.getEntry(1))*(((((((-2)*(R.getEntry(0)))*(POW(E.getEntry(1),3)))+(((6)*(R.getEntry(1)))*(E.getEntry(2))))+(((6)*(E.getEntry(1)))*(R.getEntry(2))))+(((2)*(R.getEntry(0)))*(E.getEntry(3)))))))))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0))));
		return result;
	}

	@Override
	protected double d5NorthdAER5(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((((-(((((R.getEntry(0))*(Math.cos(E.getEntry(0))))*(POW(A.getEntry(1),5)))*(Math.sin(A.getEntry(0))))))+((((5)*(Math.cos(A.getEntry(0))))*(POW(A.getEntry(1),4)))*((((Math.cos(E.getEntry(0)))*(R.getEntry(1)))-(((R.getEntry(0))*(E.getEntry(1)))*(Math.sin(E.getEntry(0))))))))+((Math.sin(A.getEntry(0)))*((((Math.cos(E.getEntry(0)))*(((((((((30)*(R.getEntry(0)))*(E.getEntry(1)))*(A.getEntry(2)))*(E.getEntry(2)))+(((10)*(POW(E.getEntry(1),2)))*(((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3)))))))-((5)*((((((2)*(R.getEntry(2)))*(A.getEntry(3)))+(((2)*(A.getEntry(2)))*(R.getEntry(3))))+((R.getEntry(1))*(A.getEntry(4)))))))-((R.getEntry(0))*(A.getEntry(5))))))+(((5)*((((((((-2)*(R.getEntry(0)))*(POW(E.getEntry(1),3)))*(A.getEntry(2)))+(((2)*(E.getEntry(2)))*(((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3)))))))+((((2)*(R.getEntry(0)))*(A.getEntry(2)))*(E.getEntry(3))))+((E.getEntry(1))*((((((6)*(A.getEntry(2)))*(R.getEntry(2)))+(((4)*(R.getEntry(1)))*(A.getEntry(3))))+((R.getEntry(0))*(A.getEntry(4)))))))))*(Math.sin(E.getEntry(0))))))))+((Math.cos(A.getEntry(0)))*((((Math.cos(E.getEntry(0)))*((((5)*((((((((POW(E.getEntry(1),4))*(R.getEntry(1)))+((((2)*(R.getEntry(0)))*(POW(E.getEntry(1),3)))*(E.getEntry(2))))-(((3)*(R.getEntry(1)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2))))))-(((2)*(R.getEntry(0)))*((((A.getEntry(2))*(A.getEntry(3)))+((E.getEntry(2))*(E.getEntry(3)))))))-(((2)*(POW(E.getEntry(1),2)))*(R.getEntry(3))))-((E.getEntry(1))*((((((6)*(E.getEntry(2)))*(R.getEntry(2)))+(((4)*(R.getEntry(1)))*(E.getEntry(3))))+((R.getEntry(0))*(E.getEntry(4)))))))))+(R.getEntry(5)))))-(((((((((((R.getEntry(0))*(POW(E.getEntry(1),5)))-(((10)*(POW(E.getEntry(1),3)))*(R.getEntry(2))))+(((10)*(R.getEntry(2)))*(E.getEntry(3))))-(((10)*(POW(E.getEntry(1),2)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(((10)*(E.getEntry(2)))*(R.getEntry(3))))+(((5)*(R.getEntry(1)))*(E.getEntry(4))))+(((5)*(E.getEntry(1)))*(((((-3)*(R.getEntry(0)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2)))))+(R.getEntry(4))))))+((R.getEntry(0))*(E.getEntry(5)))))*(Math.sin(E.getEntry(0))))))))+(((10)*(POW(A.getEntry(1),3)))*((((Math.cos(E.getEntry(0)))*(((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(A.getEntry(2)))+((((-(((R.getEntry(0))*(POW(E.getEntry(1),2)))))+(R.getEntry(2))))*(Math.sin(A.getEntry(0)))))))-(((((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2)))))*(Math.sin(A.getEntry(0))))*(Math.sin(E.getEntry(0))))))))+(((5)*(A.getEntry(1)))*((((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*((((((6)*(A.getEntry(2)))*((((R.getEntry(0))*(POW(E.getEntry(1),2)))-(R.getEntry(2)))))-(((4)*(R.getEntry(1)))*(A.getEntry(3))))-((R.getEntry(0))*(A.getEntry(4))))))+(((((((-(((R.getEntry(0))*(POW(E.getEntry(1),4)))))+(((3)*(R.getEntry(0)))*(((POW(A.getEntry(2),2))+(POW(E.getEntry(2),2))))))+(((6)*(POW(E.getEntry(1),2)))*(R.getEntry(2))))+(((4)*(E.getEntry(1)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))-(R.getEntry(4))))*(Math.sin(A.getEntry(0)))))))+((((((((6)*(Math.cos(A.getEntry(0))))*(A.getEntry(2)))*(((((2)*(E.getEntry(1)))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))+(((((4)*(R.getEntry(0)))*(Math.cos(A.getEntry(0))))*(E.getEntry(1)))*(A.getEntry(3))))+((((((((((-4)*(POW(E.getEntry(1),3)))*(R.getEntry(1)))-((((6)*(R.getEntry(0)))*(POW(E.getEntry(1),2)))*(E.getEntry(2))))+(((6)*(E.getEntry(2)))*(R.getEntry(2))))+(((4)*(R.getEntry(1)))*(E.getEntry(3))))+(((4)*(E.getEntry(1)))*(R.getEntry(3))))+((R.getEntry(0))*(E.getEntry(4)))))*(Math.sin(A.getEntry(0))))))*(Math.sin(E.getEntry(0))))))))+(((10)*(POW(A.getEntry(1),2)))*((((Math.cos(E.getEntry(0)))*((((Math.cos(A.getEntry(0)))*(((((3)*(E.getEntry(1)))*((((E.getEntry(1))*(R.getEntry(1)))+((R.getEntry(0))*(E.getEntry(2))))))-(R.getEntry(3)))))+((((((3)*(R.getEntry(1)))*(A.getEntry(2)))+((R.getEntry(0))*(A.getEntry(3)))))*(Math.sin(A.getEntry(0)))))))+(((((-((((R.getEntry(0))*(Math.cos(A.getEntry(0))))*(POW(E.getEntry(1),3)))))+((Math.cos(A.getEntry(0)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(((3)*(E.getEntry(1)))*((((Math.cos(A.getEntry(0)))*(R.getEntry(2)))-(((R.getEntry(0))*(A.getEntry(2)))*(Math.sin(A.getEntry(0)))))))))*(Math.sin(E.getEntry(0)))))));
		return result;
	}

	@Override
	protected double d1UpdAER1(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((R.getEntry(0))*(Math.cos(E.getEntry(0))))*(E.getEntry(1)))+((R.getEntry(1))*(Math.sin(E.getEntry(0))));
		return result;
	}

	@Override
	protected double d2UpdAER2(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((((((2)*(Math.cos(E.getEntry(0))))*(E.getEntry(1)))*(R.getEntry(1)))+(((R.getEntry(0))*(Math.cos(E.getEntry(0))))*(E.getEntry(2))))-(((R.getEntry(0))*(POW(E.getEntry(1),2)))*(Math.sin(E.getEntry(0)))))+((R.getEntry(2))*(Math.sin(E.getEntry(0))));
		return result;
	}

	@Override
	protected double d3UpdAER3(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = (((((-((((R.getEntry(0))*(Math.cos(E.getEntry(0))))*(POW(E.getEntry(1),3)))))+((((3)*(Math.cos(E.getEntry(0))))*(R.getEntry(1)))*(E.getEntry(2))))+(((R.getEntry(0))*(Math.cos(E.getEntry(0))))*(E.getEntry(3))))-((((3)*(POW(E.getEntry(1),2)))*(R.getEntry(1)))*(Math.sin(E.getEntry(0)))))+((R.getEntry(3))*(Math.sin(E.getEntry(0)))))+(((3)*(E.getEntry(1)))*((((Math.cos(E.getEntry(0)))*(R.getEntry(2)))-(((R.getEntry(0))*(E.getEntry(2)))*(Math.sin(E.getEntry(0)))))));
		return result;
	}

	@Override
	protected double d4UpdAER4(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((Math.cos(E.getEntry(0)))*(((((((((-4)*(POW(E.getEntry(1),3)))*(R.getEntry(1)))-((((6)*(R.getEntry(0)))*(POW(E.getEntry(1),2)))*(E.getEntry(2))))+(((6)*(E.getEntry(2)))*(R.getEntry(2))))+(((4)*(R.getEntry(1)))*(E.getEntry(3))))+(((4)*(E.getEntry(1)))*(R.getEntry(3))))+((R.getEntry(0))*(E.getEntry(4))))))+((((((((R.getEntry(0))*(POW(E.getEntry(1),4)))-(((3)*(R.getEntry(0)))*(POW(E.getEntry(2),2))))-(((6)*(POW(E.getEntry(1),2)))*(R.getEntry(2))))-(((4)*(E.getEntry(1)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(R.getEntry(4))))*(Math.sin(E.getEntry(0))));
		return result;
	}

	@Override
	protected double d5UpdAER5(RealVector A, RealVector E, RealVector R) {
		double result = 0;
		// autogenerated from Mathematica notebook
        result = ((Math.cos(E.getEntry(0)))*((((((((((R.getEntry(0))*(POW(E.getEntry(1),5)))-(((10)*(POW(E.getEntry(1),3)))*(R.getEntry(2))))+(((10)*(R.getEntry(2)))*(E.getEntry(3))))-(((10)*(POW(E.getEntry(1),2)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+((R.getEntry(0))*(E.getEntry(3)))))))+(((10)*(E.getEntry(2)))*(R.getEntry(3))))+(((5)*(R.getEntry(1)))*(E.getEntry(4))))+(((5)*(E.getEntry(1)))*(((((-3)*(R.getEntry(0)))*(POW(E.getEntry(2),2)))+(R.getEntry(4))))))+((R.getEntry(0))*(E.getEntry(5))))))+((((((((((5)*(POW(E.getEntry(1),4)))*(R.getEntry(1)))+((((10)*(R.getEntry(0)))*(POW(E.getEntry(1),3)))*(E.getEntry(2))))-(((5)*(E.getEntry(2)))*(((((3)*(R.getEntry(1)))*(E.getEntry(2)))+(((2)*(R.getEntry(0)))*(E.getEntry(3)))))))-(((10)*(POW(E.getEntry(1),2)))*(R.getEntry(3))))-(((5)*(E.getEntry(1)))*((((((6)*(E.getEntry(2)))*(R.getEntry(2)))+(((4)*(R.getEntry(1)))*(E.getEntry(3))))+((R.getEntry(0))*(E.getEntry(4)))))))+(R.getEntry(5))))*(Math.sin(E.getEntry(0))));
		return result;
	}
	
}
